% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Met_MatD.R, R/classes.R
\docType{class}
\name{MatD}
\alias{MatD}
\alias{MatD-class}
\title{Wrapper function of \code{MatD} class}
\usage{
MatD(
  x = NULL,
  nrows = 1,
  ncols = 1,
  rownames = NULL,
  varnames = NULL,
  by.row = FALSE
)
}
\arguments{
\item{x}{(optional, default= an empty \code{distributionD} object) a list of
\code{distributionD} objects}

\item{nrows}{(optional, default=1)an integer, the number of rows.}

\item{ncols}{(optional, default=1) an integer, the number of columns (aka
variables).}

\item{rownames}{(optional, default=NULL) a list of strings containing the
names of the rows.}

\item{varnames}{(optional, default=NULL) a list of strings containing the
names of the columns (aka variables).}

\item{by.row}{(optional, default=FALSE) a logical value, TRUE the matrix is
row wise filled, FALSE the matrix is filled column wise.}

\item{.Object}{the object type "MatD"}

\item{ListOfDist}{a vector or a list of \code{distributionD} objects}

\item{names.rows}{a vector or list of strings with thenames of the rows}

\item{names.cols}{a vector or list of strings with thenames of the columns (variables)
setClass(
Class = "MatD",
representation = representation(M = "matrix"),
)
#' Constructor method for MatD class
#' @name MatD
#' @rdname MatD-class
#' @aliases initialize,MatD-method
setMethod("initialize", "MatD",
definition = function(.Object,
nrows = 1, ncols = 1, ListOfDist = NULL,
names.rows = NULL, names.cols = NULL,
by.row = FALSE) {
tt <- list(new("distributionD"))
.Object@M <- matrix(tt, nrows, ncols)

\if{html}{\out{<div class="sourceCode">}}\preformatted{        if (length(ListOfDist) > 0) \{
          nOBJ <- length(ListOfDist)
          if (by.row) \{
            count <- 0
            for (i in 1:nrows) \{
              for (j in 1:ncols) \{
                count <- count + 1
                if (count == nOBJ) count <- 1
                .Object@M[i, j][[1]] <- ListOfDist[[count]]
              \}
            \}
          \}
          else \{
            count <- 0
            for (j in 1:ncols) \{
              for (i in 1:nrows) \{
                count <- count + 1
                if (count > nOBJ) count <- 1
                .Object@M[i, j][[1]] <- ListOfDist[[count]]
              \}
            \}
          \}
        \}

        if (length(names.rows) > 0) \{
          count <- 0
          rnames <- vector("list", nrows)

          for (i in 1:nrows) \{
            count <- count + 1

            if (count > length(names.rows)) \{
              rnames[[count]] <- paste("I", count, sep = "")
            \}
            else \{
              rnames[[count]] <- names.rows[[count]]
            \}
          \}
          rownames(.Object@M) <- rnames
        \}
        else \{
          rownames(.Object@M) <- paste("I", 1:nrows, sep = "")
        \}

        if (length(names.cols) > 0) \{
          count <- 0
          cnames <- vector("list", ncols)
          for (i in 1:ncols) \{
            count <- count + 1
            if (count > length(names.cols)) \{
              cnames[[count]] <- paste("X", count, sep = "")
            \}
            else \{
              cnames[[count]] <- names.cols[[count]]
            \}
            colnames(.Object@M) <- cnames
          \}
        \} else \{
          colnames(.Object@M) <- paste("X", 1:ncols, sep = "")
        \}

        return(.Object)
      \}
}\if{html}{\out{</div>}}

)}
}
\value{
A \code{MatD} object
}
\description{
This function create a matrix of histogram data, i.e. a \code{MatD}
object

Class \code{MatD} defines a matrix of \code{distributionD} objects
}
\examples{

# bulding an empty 10 by 4 matrix of histograms
MAT <- MatD(nrows = 10, ncols = 4)

## ---- create a list of six distributionD objects
ListOfDist <- vector("list", 6)
ListOfDist[[1]] <- distributionD(c(1, 2, 3), c(0.2, 0.4, 1))
ListOfDist[[2]] <- distributionD(c(7, 8, 10, 15), c(0.1, 0.2, 0.7, 1))
ListOfDist[[3]] <- distributionD(c(9, 11, 20), c(0.3, 0.5, 1))
ListOfDist[[4]] <- distributionD(c(2, 5, 8), c(0.1, 0.3, 1))
ListOfDist[[5]] <- distributionD(c(8, 10, 15), c(0.4, 0.75, 1))
ListOfDist[[6]] <- distributionD(c(20, 22, 24), c(0.05, 0.12, 1))

## create a MatH object filling it by columns
MyMAT <- new("MatD",
  nrows = 3, ncols = 2, ListOfDist = ListOfDist,
  names.rows = c("I1", "I2", "I3"), names.cols = c("Var1", "Var2"), by.row = FALSE
)

showClass("MatD")
}
\references{
Irpino, A., Verde, R. (2015) \emph{Basic
statistics for distributional symbolic variables: a new metric-based
approach} Advances in Data Analysis and Classification, DOI
10.1007/s11634-014-0176-4
}
\author{
Antonio Irpino
}
\keyword{classes}
