% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/classes.R, R/meth_distD.R
\docType{class}
\name{distributionD-class}
\alias{distributionD-class}
\alias{distributionD}
\alias{initialize,distributionD-method}
\title{Class distributionD.}
\usage{
\S4method{initialize}{distributionD}(
  .Object,
  x = numeric(0),
  p = numeric(0),
  m = numeric(0),
  s = numeric(0)
)

distributionD(x = numeric(0), p = numeric(0))
}
\arguments{
\item{.Object}{the type ("distributionD")}

\item{x}{a numeric vector. it is the domain of the distribution .}

\item{p}{a numeric vector (of the same lenght of x). It is the cumulative distribution function CDF.}

\item{m}{(optional) a numeric value. Is the mean of the histogram.}

\item{s}{(optional) a numeric positive value. It is the standard deviation of a histogram.}
}
\value{
A \code{distributionD} object
}
\description{
Class \code{"distribution"} defines an discrete distributional object
The class describes a discrete DDA by means of its cumulative distribution
function. The methods are develoved accordingly to the L2 Wasserstein
distance between distributions.

A discrete DD object can be created also with the function \code{distributionD(...)}, the costructor function for creating an object containing the description of
a discrete DD.
}
\details{
Class \code{distributionD} defines a histogram object
}
\section{Objects from the Class}{
 Objects can be created by calls of the form
\code{new("distributionD", x, p, m, s)}.
}

\examples{
#---- initialize a distributionH object mydist
# from a simple histogram
# ----------------------------
# | x    |  Prob  | cdf   |
# ----------------------------
# | 1   |  0.4   | 0.4   |
# | 2   |  0.6   | 1.0   |
# ----------------------------
# | Tot.    |  1.0   | -     |
# ----------------------------
mydist <- new("distributionD", c(1, 2, 3), c(0.1, 0.5, 1))
str(mydist)
# OUTPUT
# Formal class 'distributionD' [package "wassdda"] with 4 slots
#   ..@ x: num [1:2] 1 2 the values
#   ..@ p: num [1:2] 0.4 1 the cdf
#   ..@ m: num  the mean
#   ..@ s: num  the standard deviation
# or using
mydist <- distributionD(x = c(1, 2, 3), p = c(0.1, 0.4, 1))
}
\references{
Irpino, A., Verde, R. (2015) \emph{Basic
statistics for distributional symbolic variables: a new metric-based
approach} Advances in Data Analysis and Classification, DOI
10.1007/s11634-014-0176-4
}
\seealso{
\code{\link{meanD}} computes the mean. \code{\link{stdD}} computes the standard deviation.
}
\author{
Antonio Irpino
}
\keyword{classes}
